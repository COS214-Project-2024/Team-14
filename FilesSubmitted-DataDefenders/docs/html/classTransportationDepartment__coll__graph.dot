digraph "TransportationDepartment"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{TransportationDepartment\n|- Capital\l|+ TransportationDepartment()\l+ getBuilding()\l+ getCapital()\l+ setCapital()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Represents the Transportation Department in the government structure @inherits GovDepartment."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{GovDepartment\n||+ addDepartment()\l+ removeDepartment()\l+ getBuilding()\l+ getCapital()\l+ setCapital()\l+ ~GovDepartment()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGovDepartment.html",tooltip="Abstract base class representing a government department."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -building" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Building\n|+ buildings\l# buildingType\l# name\l# floorArea\l# maxCapacity\l# currentOccupancy\l# maintenanceNeeded\l# energyUsage\l# Cost\l# securityLevel\l# capacityLevel\l# energyLevel\l# resourceLevels\l- resourceRequirements\l|+ calculateTax()\l+ calculateTotalTax()\l+ Building()\l+ ~Building()\l+ setCost()\l+ print()\l+ incrementOccupancy()\l+ upgradeSecurity()\l+ upgradeEnergyEfficiency()\l+ upgradeCapacity()\land 22 more...\l+ cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBuilding.html",tooltip="Abstract base class representing a building in the city."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{CityComponent\n|# population\l# area\l|+ ~CityComponent()\l+ add()\l+ remove()\l+ getName()\l+ getPopulation()\l+ getArea()\l+ print()\l+ getComponents()\l+ findComponent()\l+ getBuildingType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCityComponent.html",tooltip="Abstract base class for city components in a composite pattern."];
  Node5 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{BaseBuilding\n||+ getDescription()\l+ getCost()\l+ ~BaseBuilding()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBaseBuilding.html",tooltip="Abstract base class defining core building interface."];
  Node6 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{ResourceConsumer\n||+ ~ResourceConsumer()\l+ receiveResource()\l+ getResourceLevel()\l+ needsResource()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classResourceConsumer.html",tooltip="Abstract interface for entities that consume resources."];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -buildingTax" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{BuildingTax\n||+ BuildingTax()\l+ ~BuildingTax()\l+ calculateTax()\l+ calculateTotalTax()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBuildingTax.html",tooltip="Concrete strategy for calculating building taxes."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{TaxStrategy\n||+ ~TaxStrategy()\l+ calculateTax()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTaxStrategy.html",tooltip="Abstract base class for implementing various tax calculation strategies."];
  Node9 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #parentNeighborhood" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{Neighborhood\n|- name\l- buildings\l- components\l- population\l- area\l|+ Neighborhood()\l+ ~Neighborhood()\l+ add()\l+ remove()\l+ getName()\l+ getComponents()\l+ findComponent()\l+ print()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNeighborhood.html",tooltip="Represents a neighborhood in the city."];
  Node4 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -state" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{BuildingState\n||+ ~BuildingState()\l+ getState()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBuildingState.html",tooltip="Abstract base class for building states."];
}
